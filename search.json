[{"path":"https://kwb-r.github.io/urbanAnnualRunoff/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/articles/workflow_beijing.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Workflow: Beijing","text":"","code":"### prerequisites (64bit R) if(Sys.getenv(\"R_ARCH\") != \"/x64\") {   stop(\"Spatial operations need a lot of RAM. Use of 64bit R is required.     Workflow in RStudio:   1. Go to 'Tools' (top pane) 2. Select 'Global Options'  3. Select 'General'  4. Under 'R Sessions' select 'Change'  5. Select 'Use the machine`s default R version of R64 (64-bit)' 6. Close all R Studio sessions   7. Restart R Studio\" ) } else {   path_list <- list(   root_path = \"C:/kwb/projects/keys/Data-Work packages\",   site = \"Beijing\",   data = \"WP2_SUW_pollution_<site>\",   abimo = \"<root_path>/<data>/_DataAnalysis/abimo\",   abimo_inp_shp = \"<abimo>/abimo_<site>.shp\",   abimo_inp_dbf = \"<abimo>/abimo_<site>.dbf\",   abimo_out = \"abimo_<site>out.dbf\",   abimo_berlin = \"<abimo>/abimo_2019_mitstrassen.dbf\",   abimo_scenarios = \"<abimo>/scenarios/de-coupling\",   abimo_config_original = \"<abimo>/config_original.xml\",   abimo_config_modified = \"<abimo>/config.xml\",   abimo_exe = \"<abimo>/Abimo3_2.exe\",   gis = \"<root_path>/<data>/_DataAnalysis/gis\",   climate = \"<root_path>/<data>/_DataAnalysis/climate\",   emissions_input = \"<root_path>/<data>/_DataAnalysis/emissions/input/annual_mean_conc.csv\",   emissions_output = \"<root_path>/<data>/_DataAnalysis/emissions/output\" )  paths <- kwb.utils::resolve(path_list)  # load shapefile containing subcatchments ('blockteilflächen') abimo_org <- raster::shapefile(file.path(paths$gis, 'input_subareas.shp'))  # make abimo 'CODE' column abimo_org@data$CODE <- paste(abimo_org@data$Name, abimo_org@data$Outlet, sep='_')  # pad CODE with zeroes to match output of ABIMO abimo_org@data$CODE <- urbanAnnualRunoff::padCODE(abimo_org@data$CODE)  # build classification model kwb.ml::buildClassMod(   rawdir = paths$gis,   image = 'input_image.tif',   groundTruth = 'input_groundtruth2.shp',   groundTruthValues = list('roof' = 1,                             'street' = 2,                            'pervious' = 3,                            'shadow' = 4,                            'water' = 5),   spectrSigName = 'spectrSig.Rdata',   modelName = 'rForest.Rdata',   overlayExists = FALSE,   nCores = parallel::detectCores() - 1,   mtryGrd = 1:3,    ntreeGrd=seq(80, 150, by=10),   nfolds = 3,    nodesize = 3,    cvrepeats = 2)  # check model performance load(file.path(paths$gis,\"rForest.Rdata\")) caret::confusionMatrix(data = model$finalModel$predicted,                         reference = model$trainingData$.outcome,                         mode = 'prec_recall')  # classify image for roofs and streets kwb.ml::predictSurfClass(rawdir = paths$gis,                                     modelName = 'rForest.Rdata',                                     image = 'input_image.tif',                                     predName = 'classified_image.tif')   # make overlay object (list where each element is a vector of the pixel values  # of the classified image for each subcatchment) urbanAnnualRunoff::makeOverlay(rawdir = paths$gis,                                rasterData = 'classified_image.tif',                                subcatchmSPobject = abimo_org,                                overlayName = 'surfType')   # compute ABIMO variable STR_FLGES (m2 street area) abimo_org@data$STR_FLGES <- urbanAnnualRunoff::makeSTR_FLGES(   rawdir = paths$gis,   subcatchmSPobject = abimo_org,   mask = 'input_mask.shp',   rasterData = 'classified_image.tif',   overlayName = 'surfType',   targetValue = 2,    add_streets_outside_subcatchments = FALSE   )  # make ABIMO variable FLGES abimo_org@data$FLGES <- urbanAnnualRunoff::makeFLGES(subcatchmSPobject = abimo_org) - abimo_org@data$STR_FLGES  # compute ABIMO variable VG (% soil sealing) abimo_org@data$VG <- urbanAnnualRunoff::makeVG(rawdir = paths$gis,                         subcatchmSPobject = abimo_org,                         rasterData = 'input_impervious.tif',                         targetValue = 80)  # compute ABIMO variable PROBAU (%roof) abimo_org@data$PROBAU <- urbanAnnualRunoff::makePROBAU(   rawdir = paths$gis,   rasterData = 'classified_image.tif',   overlayName = 'surfType',   targetValue = 1)   ### fix previously wrong calculated area shares (PROBAU, PROVGU, STR_FLGES) abimo <- urbanAnnualRunoff::fix_abimo_shares(abimo_org)   ## Decoupling from SWMM modelling:  ## https://kwb-r.github.io/keys.lid/articles/scenarios.html#green-roof ## # 100 % green-roof: with_berm_intensive_no-drainmat #abimo@data$PROBAU <- (1-1*(90.42-15.2)/100)*abimo@data$PROBAU # combi-1_high # 50 % green-roof: with_berm_intensive_no-drainmat #abimo@data$PROBAU <- (1-0.5*(90.42-15.2)/100)*abimo@data$PROBAU # combi-1_medium # 25 % green-roof: with_berm_intensive_no-drainmat #abimo@data$PROBAU <- (1-0.25*(90.42-15.2)/100)*abimo@data$PROBAU # combi-1_low # 100 % green-roof: with_berm_extensive_no-drainmat #abimo@data$PROBAU <- (1-1*(72.6-15.2)/100)*abimo@data$PROBAU  # combi-2_high # 50 % green-roof: with_berm_extensive_no-drainmat #abimo@data$PROBAU <- (1-0.5*(72.6-15.2)/100)*abimo@data$PROBAU # combi-2_medium # 25 % green-roof: with_berm_extensive_no-drainmat #abimo@data$PROBAU <- (1-0.25*(72.6-15.2)/100)*abimo@data$PROBAU # combi-2_low     ## Decoupling from SWMM modelling:  ## https://kwb-r.github.io/keys.lid/articles/scenarios.html#permeable-pavements ## # 100 % permeable pavements: 180mm.per.hour_no-drainage #abimo@data$PROVGU <- (1-100*(0.572-0.152)/50)*abimo@data$PROVGU # combi_high #  50 % permeable pavements: 180mm.per.hour_no-drainage #abimo@data$PROVGU <- (1-50*(0.572-0.152)/50)*abimo@data$PROVGU # combi_medium #  25 % permeable pavements: 180mm.per.hour_no-drainage #abimo@data$PROVGU <- (1-25*(0.572-0.152)/50)*abimo@data$PROVGU # combi_low #  10 % permeable pavements: 180mm.per.hour_no-drainage #abimo@data$PROVGU <- (1-10*(0.572-0.152)/50)*abimo@data$PROVGU  # use raw code to compute and assign remaining ABIMO variables manually  ### use Berlin Abimo data (for 'Blockteilflaechen' connected to channelisation ### to imrpove default parameterisation for 'unkown' underground types in Beijing  abimo_berlin <- foreign::read.dbf(paths$abimo_berlin) %>%    dplyr::filter(KANAL == 1)  share_vg_str <- colSums(abimo_berlin[, stringr::str_detect(names(abimo_berlin), \"^VGSTRASSE\"), drop = FALSE] * abimo_berlin$STR_FLGES /sum(abimo_berlin$STR_FLGES))                             share_belag <- colSums(abimo_berlin[, stringr::str_detect(names(abimo_berlin), \"^BELAG\")] * abimo_berlin$FLGES /sum(abimo_berlin$FLGES)) share_belag <- share_belag*100/sum(share_belag)  share_belag_str <- colSums(abimo_berlin[, stringr::str_detect(names(abimo_berlin), \"^STR_BELAG\")] * abimo_berlin$STR_FLGES /sum(abimo_berlin$STR_FLGES)) share_belag_str <- share_belag_str*100/sum(share_belag_str)  share_kan <- colSums(abimo_berlin[, stringr::str_detect(names(abimo_berlin), \"^KAN_\")] * (abimo_berlin$FLGES+abimo_berlin$STR_FLGES) /sum(abimo_berlin$FLGES+abimo_berlin$STR_FLGES))   # % imperviousness streets abimo@data$VGSTRASSE <- share_vg_str #100 -> 90.0402  ## Decoupling from SWMM modelling:  ## https://kwb-r.github.io/keys.lid/articles/scenarios.html#bioretention-cell ## scenario: 3.6mm.per.h_mulde_no-drainage  # 40 % of street area (unsealed area used as bioretention-cell) #abimo@data$VGSTRASSE <- round(abimo@data$VGSTRASSE - 40*(57.2-15.2)/50,1) #56.4 # combi_high # 20 % of street area (unsealed area used as bioretention-cell) #abimo@data$VGSTRASSE <- round(abimo@data$VGSTRASSE - 20*(57.2-15.2)/50,1) #73.2 # combi_medium # 10 % of street area (unsealed area used as bioretention-cell) #abimo@data$VGSTRASSE <- round(abimo@data$VGSTRASSE - 10*(57.2-15.2)/50,1) #81.6 # combi_low #  5 % of street area (unsealed area used as bioretention-cell) #abimo@data$VGSTRASSE <- round(abimo@data$VGSTRASSE - 5*(57.2-15.2)/50,1) #85.8    # %cover types in other imperv. areas (PROVGU) abimo@data$BELAG1 <- share_belag[1] #100 -> 34.69844 abimo@data$BELAG2 <- share_belag[2] #  0 -> 48.03494 abimo@data$BELAG3 <- share_belag[3] #  0 ->  5.54433 abimo@data$BELAG4 <- share_belag[4] #  0 -> 11.72229  # %cover types in street areas abimo@data$STR_BELAG1 <- share_belag_str[1] #100 -> 51.344865 abimo@data$STR_BELAG2 <- share_belag_str[2] #0 -> 26.501014 abimo@data$STR_BELAG3 <- share_belag_str[3] #0 -> 14.497974 abimo@data$STR_BELAG4 <- share_belag_str[4] #0 ->  7.656147  # identifiers abimo@data$BEZIRK <- 1 abimo@data$STAGEB <- 1 abimo@data$BLOCK <- 1 abimo@data$TEILBLOCK <- 1 # NUTZUNG = 21 (mixed area I: residential, trade, services) # https://www.stadtentwicklung.berlin.de/umwelt/umweltatlas/download/goedecke_et_al_abimo2019_doku.pdf#page=15 abimo@data$NUTZUNG <- 21  # TYP = 38 (mixed area, mainly handicrafts and small businesses, with dense# #           development)   # https://www.stadtentwicklung.berlin.de/umwelt/umweltatlas/download/goedecke_et_al_abimo2019_doku.pdf#page=22 abimo@data$TYP <- 38   # channelization degrees. based on data provided BEWG (2020-11-03) abimo@data$KANAL <- 1 abimo@data$KAN_BEB <- 80 abimo@data$KAN_VGU <- 80 abimo@data$KAN_STR <- 80  # soil field capacity (provided BEWG on 2020-11-03) and  # groundwater level: 15m (email to MR on 2021-03-25 10:38 by Dr. Dong) abimo@data$FELD_30 <- 20 abimo@data$FELD_150 <- 20 abimo@data$FLUR <- 15  # compute annual and summer rainfall.  # *** potential enhancement: *** # return the multiannual average annual rainfall. care must be taken to exclude # incomplete years from the average calculation. same for summer rainfall precipitation <- urbanAnnualRunoff::computeABIMOclimate(   rawdir = paths$climate,   file_inp = sprintf('raw_climateeng_precipitation_monthly_%s.txt',                       paths$site),   file_out = 'precipitation.txt',   summer_month_start = 4)  # compute annual and summer ETP. this goes automatically into the  # ABIMO config file by using kwb.abimo::abimo_xml_evap()    evapotranspiration <- urbanAnnualRunoff::computeABIMOclimate(   rawdir = paths$climate,   file_inp = sprintf('raw_climateeng_etp_daily_%s.txt',                       paths$site),   file_out = 'evapotranspiration.txt',   summer_month_start = 4)   ### Merge complete years (i.e. 2014-2019 for Beijing) ### mean rainfall: 492mm climate_data <- dplyr::inner_join(precipitation, evapotranspiration,                                   by = \"year\",                                    suffix = c(\".p\", \".etp\")) %>%     dplyr::mutate(dplyr::across(tidyselect::ends_with(\"p\"), round))  #wet year 629mm (2018) #climate_data <- climate_data %>%  dplyr::filter(year == \"2018\")  #dry year 351mm (2019) #climate_data <- climate_data %>%  dplyr::filter(year == \"2019\")   # annual rainfall (this can be automatized by making 'computeABIMOclimate' # return the multiannual average annual rainfall. care must be taken to exclude # incomplete years from the average calculation) round_mean <- function(values) {   round(mean(values), digits  = 0) }  ### Mean precipitation value for period 2014-2019 abimo@data$REGENJA <- round_mean(climate_data$sum_annual.p) abimo@data$REGENSO <- round_mean(climate_data$sum_summer.p)  ### Mean evapotranspiration value for period 2014-2019 kwb.abimo::abimo_xml_evap(   file_in = paths$abimo_config_original,   file_out = paths$abimo_config_modified,   evap_annual = round_mean(climate_data$sum_annual.etp),   evap_summer = round_mean(climate_data$sum_summer.etp) )  ### Check modified ABIMO config.xml kwb.utils::hsOpenWindowsExplorer(paths$abimo_config_modified)  # select required columns and write out new shapefile requiredCols <- c('CODE', 'BEZIRK', 'STAGEB', 'BLOCK',                    'TEILBLOCK', 'NUTZUNG', 'TYP', 'FLGES',                    'STR_FLGES', 'PROBAU', 'PROVGU', 'VGSTRASSE',                   'BELAG1', 'BELAG2', 'BELAG3', 'BELAG4',                   'STR_BELAG1', 'STR_BELAG2', 'STR_BELAG3', 'STR_BELAG4',                   'KAN_BEB', 'KAN_VGU', 'KAN_STR',                   'REGENJA', 'REGENSO',                   'FELD_30', 'FELD_150', 'FLUR') abimo@data <- kwb.utils::selectColumns(abimo@data,                                         columns = requiredCols)  # format numbers to 0 decimal places (avoid 'pseudo-accuracy') #abimo@data[, 8:ncol(abimo@data)] <- round( #  abimo@data[, 8:ncol(abimo@data)], #  digits = 0)  # change decimal separator to comma # (ABIMO does not run correctly otherwise)  abimo@data <- as.data.frame(apply(X=apply(X=abimo@data,                                          c(1, 2),                                          FUN=as.character),                                  c(1, 2),                                  FUN=gsub,                                  pattern=\"\\\\.\",                                  replacement=\",\"),                            stringsAsFactors = FALSE)     # write ABIMO input table raster::shapefile(x=abimo,                    filename=paths$abimo_inp_shp,                   overwrite=TRUE)   kwb.abimo::write.dbf.abimo(abimo,                             new_dbf = paths$abimo_inp_dbf)    # run ABIMO manually in GUI ---------------------------------------------------- if(!fs::file_exists(paths$abimo_exe)) {   stop(cat(sprintf(\"ABIMO executable does not exist: %s Please copy to this location\", paths$abimo_exe))) } else { message(cat(sprintf(\"Run ABIMO executable manually: 1. Select input file: \\\"%s\\\" 2. Save it under: \\\"%s\\\"\",                      abimo_inp_path,                      paths$abimo_out)) ) }       kwb.utils::hsOpenWindowsExplorer(dirname(paths$abimo_exe))  # postprocessing ---------------------------------------------------------------- # post-process ABIMO output file -> join it with input shape file for  # visualization in GIS  scenario_results_beijing <- urbanAnnualRunoff::get_scenario_results(paths)  scenario_results_beijing %>%     dplyr::select(!tidyselect::all_of(c(\"abimo_inpout\", \"abimo_inpout_emissions\"))) %>%                    openxlsx::write.xlsx(file = \"res_tz.xlsx\", overwrite = TRUE)   #usethis::use_data(scenario_results_beijing, overwrite = TRUE)  }"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/articles/workflow_beijing.html","id":"scenario-results","dir":"Articles","previous_headings":"","what":"Scenario Results","title":"Workflow: Beijing","text":"summary table ABIMO water balance modelling results different de-coupling scenarios. Combining (combi_xxx) different single measures, .e. bioretention cells (streets), green roofs (sealed areas buildings), permeable pavements (sealed areas without buildings/streets)) enables satisfy VRR (volume rainfall retended) goal defined climate zone 3, .e 0.75 >= VRR <= 0.85.","code":"library(urbanAnnualRunoff) DT::datatable(urbanAnnualRunoff::scenario_results_beijing %>%  dplyr::select(!tidyselect::all_of(c(\"abimo_inpout\", \"abimo_inpout_emissions\"))))"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/articles/workflow_jinxi.html","id":"scenario-results","dir":"Articles","previous_headings":"","what":"Scenario Results","title":"Workflow: Jinxi","text":"summary table ABIMO water balance modelling results different de-coupling scenarios. Combining (combi_xxx) different single measures, .e. bioretention cells (streets), green roofs (sealed areas buildings), permeable pavements (sealed areas without buildings/streets)) enables satisfy VRR (volume rainfall retended) goal defined climate zone 4, .e 0.70 >= VRR <= 0.85.","code":"library(urbanAnnualRunoff) DT::datatable(urbanAnnualRunoff::scenario_results_jinxi %>%  dplyr::select(!tidyselect::all_of(c(\"abimo_inpout\", \"abimo_inpout_emissions\"))))"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/articles/workflow_jinxi.html","id":"land-use-classification-comparison","dir":"Articles","previous_headings":"","what":"Land Use Classification Comparison","title":"Workflow: Jinxi","text":"","code":"landuse_hit <- shapefiles::read.dbf(paths$landuse_hit) landuse_hit_stats <- landuse_hit$dbf %>%     dplyr::mutate(landuse_name = kwb.utils::multiSubstitute(.data$landuse,                             list(                            '1' = \"pervious\",                            '2' = \"pervious\",                            '3' = \"roof\",                             '4' = \"street\",                            '5' = \"water\")                            )                 ) %>%   dplyr::group_by(.data$landuse_name) %>%    dplyr::summarise(area_m2 = sum(.data$area_m2),                    area_percent = round(100*area_m2/sum(landuse_hit$dbf$area_m2),1)) %>%    dplyr::rename(landuse = .data$landuse_name) %>%     dplyr::arrange(.data$landuse) %>%    dplyr::select(.data$landuse, .data$area_percent)  landuse_kwb <- raster::raster(paths$landuse_kwb)  landuse_kwb_values <- raster::values(landuse_kwb) landuse_kwb_values_vector <- table(landuse_kwb_values[!is.na(landuse_kwb_values)]) landuse_kwb_stats <- tibble::tibble(landuse_id = names(landuse_kwb_values_vector),                                     landuse = kwb.utils::multiSubstitute(landuse_id,                                                                          list('1' = \"roof\",                                                                               '2' = \"street\",                                                                               '3' = \"pervious\",                                                                               '4' = \"shadow\",                                                                               '5' = \"water\")),                                     area_m2 = landuse_kwb_values_vector,                                     area_total = sum(landuse_kwb_values_vector),                                     area_percent = round(100*area_m2/area_total,1)) %>%     dplyr::arrange(.data$landuse) %>%    dplyr::select(.data$landuse, .data$area_percent)   catchments_hit_abimo <- shapefiles::read.dbf(paths$catchments_hit_abimo) names(catchments_hit_abimo$dbf)[5] <- \"subcatchment_name\"   landuse_authority_data <- readxl::read_xlsx(paths$landuse_authority,                                              sheet = \"data\") landuse_authority_metadata <- readxl::read_xlsx(paths$landuse_authority,                                                  sheet = \"metadata\")  landuse_authority_stats <- landuse_authority_data %>%     dplyr::left_join(landuse_authority_metadata,                    by = \"landuse_id\") %>%    dplyr::right_join(catchments_hit_abimo$dbf[,c(\"subcatchment_name\", \"area_m2\")],                    by = \"subcatchment_name\") %>%    dplyr::group_by(.data$landuse_name) %>%    dplyr::summarise(percent = round(sum(.data$area_m2 * .data$percent)/sum(catchments_hit_abimo$dbf$area_m2),1)) %>%    dplyr::mutate(landuse_name = kwb.utils::multiSubstitute(.data$landuse_name,                               list('greenland' = \"pervious\",                                   'road' = \"streets\"                                   ))) %>%    dplyr::arrange(.data$landuse_name)   openxlsx::write.xlsx(list(landuse_hit_stats = landuse_hit_stats,                           landuse_kwb_stats = landuse_kwb_stats,                           landuse_authority_stats = landuse_authority_stats ),                      file = \"landuse_classification_comparison.xlsx\",                      overwrite = TRUE                      )"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/articles/workflow_jinxi.html","id":"abimo-vs-swmm-comparison","dir":"Articles","previous_headings":"","what":"ABIMO vs SWMM Comparison","title":"Workflow: Jinxi","text":"","code":"swmm_annualrunoff <- read.table(file = paths$swmm_annualrunoff,                                   sep = \"\",                                  skip = 9,                                  header = TRUE)   catchments_hit_abimo_connected_100 <- catchments_hit_abimo$dbf[,c(\"subcatchment_name\", \"area_m2\", \"connection\")] %>%    dplyr::filter(.data$connection == 100)   catchments_hit_abimo_connected_0 <- catchments_hit_abimo$dbf[,c(\"subcatchment_name\", \"area_m2\", \"connection\")] %>%    dplyr::filter(.data$connection == 0)  swmm_catchment_abimo <- catchments_hit_abimo_connected_100 %>% #catchments_hit_abimo$dbf[,c(\"subcatchment_name\", \"area_m2\")]    dplyr::mutate(area_percent = .data$area_m2/sum(.data$area_m2)) %>%    dplyr::left_join(swmm_annualrunoff, by = \"subcatchment_name\") %>%    dplyr::summarise(area_m2 = sum(.data$area_m2),                    total_precip_mm = sum(.data$area_percent*.data$total_precip_mm),                    total_evap_mm = sum(.data$area_percent*.data$total_evap_mm),                    total_infil_mm = sum(.data$area_percent*.data$total_infil_mm),                    total_runoff_mm = sum(.data$area_percent*.data$total_runoff_mm)) %>%    dplyr::mutate(vrr = round((1 - total_runoff_mm/total_precip_mm)*100, 1))  catchments_hit_all <- shapefiles::read.dbf(paths$catchments_hit_all) names(catchments_hit_all$dbf)[5] <- \"subcatchment_name\"  swmm_catchment_all <- catchments_hit_all$dbf[,c(\"subcatchment_name\", \"area_m2\")] %>%    dplyr::mutate(area_percent = .data$area_m2/sum(catchments_hit_all$dbf$area_m2)) %>%    dplyr::left_join(swmm_annualrunoff, by = \"subcatchment_name\") %>%    dplyr::summarise(total_precip_mm = sum(.data$area_percent*.data$total_precip_mm),                    total_evap_mm = sum(.data$area_percent*.data$total_evap_mm),                    total_infil_mm = sum(.data$area_percent*.data$total_infil_mm),                    total_runoff_mm = sum(.data$area_percent*.data$total_runoff_mm)) %>%    dplyr::mutate(vrr = round((1 - total_runoff_mm/total_precip_mm)*100, 1))   swmm_catchment_stats <- dplyr::bind_cols(tibble::tibble(catchment = c(\"all\", \"abimo\")),                                          dplyr::bind_rows(swmm_catchment_all,                                                        swmm_catchment_abimo)                                          )  sewer_connection <- readxl::read_xls(paths$sewer_connection) sewer_connection_stats_abimo <- catchments_hit_abimo$dbf %>%    dplyr::mutate(area_percent = .data$area_m2/sum(catchments_hit_abimo$dbf$area_m2)) %>%    dplyr::left_join(sewer_connection, by = \"subcatchment_name\") %>%    dplyr::summarise(connection_percent = sum(.data$area_percent*.data$connect))   sewer_connection_stats_all <- catchments_hit_all$dbf %>%    dplyr::mutate(area_percent = .data$area_m2/sum(catchments_hit_all$dbf$area_m2)) %>%    dplyr::left_join(sewer_connection, by = \"subcatchment_name\") %>%    dplyr::summarise(connection_percent = sum(.data$area_percent*.data$connect))  sewer_connection_stats <- dplyr::bind_cols(tibble::tibble(catchment = c(\"all\", \"abimo\")),                                          dplyr::bind_rows(sewer_connection_stats_all,                                                        sewer_connection_stats_abimo)                                          )   urbanAnnualRunoff::read_concentrations(paths$emissions_input)[,c(\"VariableName\", \"mean\", \"UnitsAbbreviation\")] %>%    openxlsx::write.xlsx(\"concentrations.xlsx\")"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Roberto Tatis-Muvdi. Author. Michael Rustler. Author, maintainer. . Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tatis-Muvdi R, Rustler M (2022). urbanAnnualRunoff: R Package Deriving Urban Surfaces Storm Runoff Analysis. R package version 0.1.0, https://github.com/KWB-R/urbanAnnualRunoff.","code":"@Manual{,   title = {urbanAnnualRunoff: R Package for Deriving Urban Surfaces for Storm Runoff Analysis},   author = {Roberto Tatis-Muvdi and Michael Rustler},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/KWB-R/urbanAnnualRunoff}, }"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package for Deriving Urban Surfaces for Storm Runoff\n    Analysis","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install keys.lid in R install.packages('urbanAnnualRunoff')  # Browse the keys.lid manual pages help(package = 'urbanAnnualRunoff')"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"R Package for Deriving Urban Surfaces for Storm Runoff\n    Analysis","text":"workflow modelling urban annual runoff using water balance model ABIMO described two case-study sites China : Jinxi Tongzhou (Beijing)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/calculate_loads.html","id":null,"dir":"Reference","previous_headings":"","what":"Emissions: calculate loads — calculate_loads","title":"Emissions: calculate loads — calculate_loads","text":"annual load calculated V x c. heavy metals -> l/m2-year x ug/l = ug/m2-year;  BOD/COD/TSS -> l/m2-year x mg/l = mg/m2-year","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/calculate_loads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emissions: calculate loads — calculate_loads","text":"","code":"calculate_loads(abimo_inpout, concentrations)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/calculate_loads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emissions: calculate loads — calculate_loads","text":"abimo_inpout data.frame SpatialPolygonsDataFrame ABIMO input output retrieved postProcessABIMO concentrations concentrations data frame retrieved read_concentrations","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/calculate_loads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emissions: calculate loads — calculate_loads","text":"add calculated loads additional colums  abimo_inpout data.frame SpatialPolygonsDataFrame","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/computeABIMOclimate.html","id":null,"dir":"Reference","previous_headings":"","what":"abimo: compute climate — computeABIMOclimate","title":"abimo: compute climate — computeABIMOclimate","text":"read Climate Engine data compute (source: https://app.climateengine.org/climateEngine)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/computeABIMOclimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"abimo: compute climate — computeABIMOclimate","text":"","code":"computeABIMOclimate(   rawdir,   file_inp,   file_out,   summer_month_start = 4,   skip = 6,   sep = \"\",   dec = \".\" )"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/computeABIMOclimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"abimo: compute climate — computeABIMOclimate","text":"rawdir rawdir file_inp name input file file_out name output file written \"raw_dir\" summer_month_start number month summer half year starts (default: 4) skip skip (default: 6) sep sep (default: '') dec dec (default: '.')","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/computeABIMOclimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"abimo: compute climate — computeABIMOclimate","text":"data frame yearly summed measurements (summer half year, total year sum) also text file written \"raw_dir\" \"out_file\" name","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/fix_abimo_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix ABIMO shares — fix_abimo_shares","title":"Fix ABIMO shares — fix_abimo_shares","text":"Fix ABIMO shares","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/fix_abimo_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix ABIMO shares — fix_abimo_shares","text":"","code":"fix_abimo_shares(abimo)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/fix_abimo_shares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix ABIMO shares — fix_abimo_shares","text":"abimo abimo object","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/fix_abimo_shares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix ABIMO shares — fix_abimo_shares","text":"fixed percental shares (PROBAU, PROVGU, STR_FLGES)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_abimo_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ABIMO Statistics — get_abimo_stats","title":"Get ABIMO Statistics — get_abimo_stats","text":"Get ABIMO Statistics","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_abimo_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ABIMO Statistics — get_abimo_stats","text":"","code":"get_abimo_stats(abimo_inpout)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_abimo_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ABIMO Statistics — get_abimo_stats","text":"abimo_inpout abimo_inpout","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_abimo_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ABIMO Statistics — get_abimo_stats","text":"tibble columns \"catchment_km2\", \"rainfall_cbm\", \"infiltration_cbm\", evapotrans_cbm \"vrr\" (1 - runoff_cbm / rainfall_cbm)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_scenario_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Scenario Results — get_scenario_results","title":"Get Scenario Results — get_scenario_results","text":"Get Scenario Results","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_scenario_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Scenario Results — get_scenario_results","text":"","code":"get_scenario_results(paths)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_scenario_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Scenario Results — get_scenario_results","text":"paths paths directory containing ABIMO scenario results","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/get_scenario_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Scenario Results — get_scenario_results","text":"tibble","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeFLGES.html","id":null,"dir":"Reference","previous_headings":"","what":"compute ABIMO variable FLGES (block area without street area) — makeFLGES","title":"compute ABIMO variable FLGES (block area without street area) — makeFLGES","text":"compute ABIMO variable FLGES (block area without street area)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeFLGES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute ABIMO variable FLGES (block area without street area) — makeFLGES","text":"","code":"makeFLGES(subcatchmSPobject)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeFLGES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute ABIMO variable FLGES (block area without street area) — makeFLGES","text":"subcatchmSPobject subcatchmSPobject","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeFLGES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute ABIMO variable FLGES (block area without street area) — makeFLGES","text":"???","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeOverlay.html","id":null,"dir":"Reference","previous_headings":"","what":"spatial overlay of subcatchments and raster holding information required by ABIMO — makeOverlay","title":"spatial overlay of subcatchments and raster holding information required by ABIMO — makeOverlay","text":"spatial overlay subcatchments raster holding information required ABIMO","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeOverlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatial overlay of subcatchments and raster holding information required by ABIMO — makeOverlay","text":"","code":"makeOverlay(   rawdir,   rasterData,   subcatchmSPobject,   overlayName,   subcatchmNamesCol )"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeOverlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatial overlay of subcatchments and raster holding information required by ABIMO — makeOverlay","text":"rawdir Path data directory. rasterData Name raster file containing classified image. subcatchmSPobject Spatial dataset containing subcatchment polygons (ABIMO Blockteilflächen) (sp object type, R package sp). overlayName Name output overlay object. subcatchmNamesCol Name column attribute table subcatchmSPobject contains subcatchment identifiers. used naming elements resulting list","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeOverlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatial overlay of subcatchments and raster holding information required by ABIMO — makeOverlay","text":"save overlay .Rdata directory \"rawdir\" filename defined ","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makePROBAU.html","id":null,"dir":"Reference","previous_headings":"","what":"compute ABIMO variable PROBAU (covered sealed area) — makePROBAU","title":"compute ABIMO variable PROBAU (covered sealed area) — makePROBAU","text":"compute ABIMO variable PROBAU (covered sealed area)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makePROBAU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute ABIMO variable PROBAU (covered sealed area) — makePROBAU","text":"","code":"makePROBAU(rawdir, rasterData, overlayName, targetValue)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makePROBAU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute ABIMO variable PROBAU (covered sealed area) — makePROBAU","text":"rawdir rawdir rasterData rasterData overlayName overlayName targetValue targetValue","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makePROBAU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute ABIMO variable PROBAU (covered sealed area) — makePROBAU","text":"???","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeSTR_FLGES.html","id":null,"dir":"Reference","previous_headings":"","what":"compute ABIMO variable STR_FLGES (street area of block area) — makeSTR_FLGES","title":"compute ABIMO variable STR_FLGES (street area of block area) — makeSTR_FLGES","text":"compute ABIMO variable STR_FLGES (street area block area)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeSTR_FLGES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute ABIMO variable STR_FLGES (street area of block area) — makeSTR_FLGES","text":"","code":"makeSTR_FLGES(   rawdir,   subcatchmSPobject,   rasterData,   overlayName,   targetValue,   mask,   add_streets_outside_subcatchments = FALSE )"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeSTR_FLGES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute ABIMO variable STR_FLGES (street area of block area) — makeSTR_FLGES","text":"rawdir rawdir subcatchmSPobject subcatchmSPobject rasterData rasterData overlayName overlayName targetValue targetValue mask mask add_streets_outside_subcatchments boolean (TRUE/FALSE), TRUE: done Berlin, street area outside subcatchment polygons distributed among polygons proportion area. thus: street area polygon = internal street area + allocated external street area, FALSE: street area within subcatchments counted (default: FALSE)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeSTR_FLGES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute ABIMO variable STR_FLGES (street area of block area) — makeSTR_FLGES","text":"STR_FLGES","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeVG.html","id":null,"dir":"Reference","previous_headings":"","what":"compute ABIMO variable VG (soil sealing percentage) — makeVG","title":"compute ABIMO variable VG (soil sealing percentage) — makeVG","text":"based online global land use data","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeVG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute ABIMO variable VG (soil sealing percentage) — makeVG","text":"","code":"makeVG(rawdir, subcatchmSPobject, rasterData, targetValue)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeVG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute ABIMO variable VG (soil sealing percentage) — makeVG","text":"rawdir rawdir subcatchmSPobject subcatchmSPobject rasterData rasterData targetValue targetValue","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/makeVG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute ABIMO variable VG (soil sealing percentage) — makeVG","text":"???","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/padCODE.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function: pad CODE column of ABIMO table — padCODE","title":"helper function: pad CODE column of ABIMO table — padCODE","text":"helper function: pad CODE column ABIMO table","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/padCODE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function: pad CODE column of ABIMO table — padCODE","text":"","code":"padCODE(string)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/padCODE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function: pad CODE column of ABIMO table — padCODE","text":"string string CODE identifier","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/padCODE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function: pad CODE column of ABIMO table — padCODE","text":"padded CODE identifier (leading \"0\" depending maximium character length)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/postProcessABIMO.html","id":null,"dir":"Reference","previous_headings":"","what":"abimo: postprocess — postProcessABIMO","title":"abimo: postprocess — postProcessABIMO","text":"read dbf results file joins input shapefile","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/postProcessABIMO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"abimo: postprocess — postProcessABIMO","text":"","code":"postProcessABIMO(path_input, path_output)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/postProcessABIMO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"abimo: postprocess — postProcessABIMO","text":"path_input path ABIMO input shapefile path_output path ABIMO output DBF file","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/postProcessABIMO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"abimo: postprocess — postProcessABIMO","text":"joined SpatialPolygonsDataFrame ABIMO input output","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/read_concentrations.html","id":null,"dir":"Reference","previous_headings":"","what":"Emissions: read concentrations from OgRe database — read_concentrations","title":"Emissions: read concentrations from OgRe database — read_concentrations","text":"imports data OgRe database selects relevant substances case study sites (Beijing, Jinxi) calculates mean concentrations structures (column: \"mean\"). addition new columns (short_name, unit_load, label_load) created","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/read_concentrations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emissions: read concentrations from OgRe database — read_concentrations","text":"","code":"read_concentrations(path)"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/read_concentrations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emissions: read concentrations from OgRe database — read_concentrations","text":"path path OgRe database file \"annual_mean_conc.csv\"","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/read_concentrations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emissions: read concentrations from OgRe database — read_concentrations","text":"data frame selected substances column","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/scenario_results_beijing.html","id":null,"dir":"Reference","previous_headings":"","what":"Results of ABIMO Scenario Analysis For Beijing — scenario_results_beijing","title":"Results of ABIMO Scenario Analysis For Beijing — scenario_results_beijing","text":"dataset ABIMO modelling results Beijing case study","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/scenario_results_beijing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results of ABIMO Scenario Analysis For Beijing — scenario_results_beijing","text":"","code":"scenario_results_beijing"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/scenario_results_beijing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results of ABIMO Scenario Analysis For Beijing — scenario_results_beijing","text":"data.frame 21 rows 20 variables: scenario_name name scenario catchment_km2 sum FLGES ans STR_FLGES (square kilometers) rainfall_cbm total rianfall catchment  ABIMO (cubicmeters/year) runoff_cbm calculated runoff ABIMO (cubicmeter) infiltration_cbm calculated infiltration ABIMO (cubicmeter/year) evapotrans_cbm calculated evapotranspiration ABIMO (cubicmeter/year) vrr calculated volume rainfall retained (1-runoff_cbm/rainfall_cbm) abimo_inpout tibble ABIMO input/output (water balance) abimo_inpout_emissions tibble ABIMO input/output (water balance + emissions) BOD.kg_yr Biological Oxygen Demand (kg/year) COD.kg_yr Chemical Oxygen Demand (kg/year) TSS.kg_yr Total Supended Solid (kg/year) Pb.kg_yr Lead (kg/year) Cd.kg_yr Cadmium (kg/year) Cr.kg_yr Chrome (kg/year) Cu.kg_yr Copper (kg/year) Ni.kg_yr Nickel (kg/year) Va.kg_yr Vanadium (kg/year) Zn.kg_yr Zinc (kg/year)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/scenario_results_jinxi.html","id":null,"dir":"Reference","previous_headings":"","what":"Results of ABIMO Scenario Analysis For Jinxi — scenario_results_jinxi","title":"Results of ABIMO Scenario Analysis For Jinxi — scenario_results_jinxi","text":"dataset ABIMO modelling results Jinxi case study","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/scenario_results_jinxi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results of ABIMO Scenario Analysis For Jinxi — scenario_results_jinxi","text":"","code":"scenario_results_jinxi"},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/reference/scenario_results_jinxi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results of ABIMO Scenario Analysis For Jinxi — scenario_results_jinxi","text":"data.frame 3 rows 20 variables: scenario_name name scenario catchment_km2 sum FLGES ans STR_FLGES (square kilometers) rainfall_cbm total rianfall catchment  ABIMO (cubicmeters/year) runoff_cbm calculated runoff ABIMO (cubicmeter) infiltration_cbm calculated infiltration ABIMO (cubicmeter/year) evapotrans_cbm calculated evapotranspiration ABIMO (cubicmeter/year) vrr calculated volume rainfall retained (1-runoff_cbm/rainfall_cbm) abimo_inpout tibble ABIMO input/output (water balance) abimo_inpout_emissions tibble ABIMO input/output (water balance + emissions) BOD.kg_yr Biological Oxygen Demand (kg/year) COD.kg_yr Chemical Oxygen Demand (kg/year) TSS.kg_yr Total Supended Solid (kg/year) Pb.kg_yr Lead (kg/year) Cd.kg_yr Cadmium (kg/year) Cr.kg_yr Chrome (kg/year) Cu.kg_yr Copper (kg/year) Ni.kg_yr Nickel (kg/year) Va.kg_yr Vanadium (kg/year) Zn.kg_yr Zinc (kg/year)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/news/index.html","id":"urbanannualrunoff-010-2022-05-18","dir":"Changelog","previous_headings":"","what":"urbanAnnualRunoff 0.1.0 2022-05-18","title":"urbanAnnualRunoff 0.1.0 2022-05-18","text":"workflow modelling urban annual runoff using water balance model ABIMO described two case-study sites China : Jinxi Tongzhou (Beijing)","code":""},{"path":"https://kwb-r.github.io/urbanAnnualRunoff/news/index.html","id":"urbanannualrunoff-0009000","dir":"Changelog","previous_headings":"","what":"urbanAnnualRunoff 0.0.0.9000","title":"urbanAnnualRunoff 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
